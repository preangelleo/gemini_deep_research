name: Test Flask API

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-api:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install chromium
        playwright install-deps chromium

    - name: Test Flask API endpoints
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        # Start Flask app in background
        python app.py &
        APP_PID=$!
        
        # Wait for server to start
        sleep 10
        
        # Test health endpoint
        echo "Testing health endpoint..."
        curl -f http://localhost:5357/health || { echo "Health check failed"; kill $APP_PID; exit 1; }
        
        # Test config endpoint
        echo "Testing config endpoint..."
        curl -f http://localhost:5357/config || { echo "Config endpoint failed"; kill $APP_PID; exit 1; }
        
        # Test prompts endpoint
        echo "Testing prompts endpoint..."
        curl -f http://localhost:5357/prompts || { echo "Prompts endpoint failed"; kill $APP_PID; exit 1; }
        
        # Clean up
        kill $APP_PID
        echo "✅ All API tests passed!"

    - name: Test Docker container
      run: |
        # Build image
        docker build -t test-image .
        
        # Test container starts properly
        docker run --rm -d -p 5358:5357 -e GEMINI_API_KEY=test_key --name test-container test-image
        
        # Wait for container
        sleep 15
        
        # Test health endpoint
        curl -f http://localhost:5358/health || { echo "Docker health check failed"; docker stop test-container; exit 1; }
        
        # Clean up
        docker stop test-container
        echo "✅ Docker container test passed!"